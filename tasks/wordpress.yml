# ---
# # Expose port 80 for wordpress
# # apiVersion: v1
# # kind: Service
# # metadata:
# #   name: wordpress
# #   namespace: default
# #   labels:
# #     app: wordpress
# # spec:
# #   ports:
# #     - port: 80
# #   selector:
# #     app: wordpress
# #     tier: frontend
# #   type: LoadBalancer

---
# Expose port 443 and ingress using port 80 for wordpress
apiVersion: v1
kind: Service
metadata:
  name: wordpress
  namespace: default
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "{{ aws_ssl_cert_arn }}"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
    # external-dns.alpha.kubernetes.io/hostname: 
  labels:
    app: wordpress
spec:
  ports:
    - port: 443
      targetPort: 80
  selector:
    app: wordpress
    tier: frontend
  type: LoadBalancer

---
# create persistent volume for wordpress app and media
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wordpress-pv-claim
  namespace: default
  labels:
    app: wordpress
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress
  namespace: default
  labels:
    app: wordpress
spec:
  selector:
    matchLabels:
      app: wordpress
      tier: frontend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: wordpress
        tier: frontend
    spec:
      containers:
      - image: wordpress:5.3-apache
        name: wordpress
        env:
        - name: WORDPRESS_DB_HOST
          value: wordpress-mysql
        - name: WORDPRESS_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-pass
              key: password
        ports:
        - containerPort: 80
          name: wordpress
        volumeMounts:
        - name: wordpress-persistent-storage
          mountPath: /var/www/html
      volumes:
      - name: wordpress-persistent-storage
        persistentVolumeClaim:
          claimName: wordpress-pv-claim